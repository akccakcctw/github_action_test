const OFF = 0;
const WARN = 1;
const ERROR = 2;

module.exports = {
	root: true,
	parserOptions: {
		parser: 'babel-eslint',
		sourceType: 'module',
	},
	env: {
		browser: true,
		node: true,
		es6: true,
	},
	extends: [
		'plugin:vue/recommended',
		'eslint:recommended',
	],
	globals: {
		Vue: true,
		_: true,
		$: true,
		jQuery: true,
		kkday: true,
	},

	// add your custom rules here
	// it is base on https://github.com/vuejs/eslint-config-vue
	rules: {
		'vue/max-attributes-per-line': [ERROR, {
			'singleline': 10,
			'multiline': {
				'max': 1,
				'allowFirstLine': false,
			},
		}],
		'vue/name-property-casing': [ERROR, 'PascalCase'],
		'vue/html-indent': [ERROR, 'tab'],
		'vue/html-self-closing': [ERROR, {
			'html': {
				'void': 'never',
				'normal': 'any',
				'component': 'always',
			},
			'svg': 'always',
			'math': 'always',
		}],
		'accessor-pairs': ERROR,
		'arrow-spacing': [ERROR, {
			'before': true,
			'after': true,
		}],
		'block-spacing': [ERROR, 'always'],
		'brace-style': [ERROR, '1tbs', {
			'allowSingleLine': true,
		}],
		'camelcase': [OFF, {
			'properties': 'always',
		}],
		'comma-dangle': [ERROR, 'always-multiline'],
		'comma-spacing': [ERROR, {
			'before': false,
			'after': true,
		}],
		'comma-style': [ERROR, 'last'],
		'constructor-super': ERROR,
		'curly': [ERROR, 'multi-line'],
		'dot-location': [ERROR, 'property'],
		'eol-last': ERROR,
		'eqeqeq': [ERROR, 'allow-null'],
		'generator-star-spacing': [ERROR, {
			'before': true,
			'after': true,
		}],
		'handle-callback-err': [ERROR, '^(err|error)$'],
		'indent': [ERROR, 'tab', {
			'SwitchCase': 1,
		}],
		'jsx-quotes': [ERROR, 'prefer-single'],
		'key-spacing': [ERROR, {
			'beforeColon': false,
			'afterColon': true,
		}],
		'keyword-spacing': [ERROR, {
			'overrides': {
				'if': { 'after': false },
				'for': { 'after': false },
				'while': { 'after': false },
			},
		}],
		'new-cap': [ERROR, {
			'newIsCap': true,
			'capIsNew': false,
		}],
		'new-parens': ERROR,
		'no-array-constructor': ERROR,
		'no-caller': ERROR,
		'no-console': [WARN, {
			allow: ['warn', 'error'],
		}],
		'no-class-assign': ERROR,
		'no-cond-assign': ERROR,
		'no-const-assign': ERROR,
		'no-control-regex': ERROR,
		'no-delete-var': ERROR,
		'no-dupe-args': ERROR,
		'no-dupe-class-members': ERROR,
		'no-dupe-keys': ERROR,
		'no-duplicate-case': ERROR,
		'no-empty-character-class': ERROR,
		'no-empty-pattern': ERROR,
		'no-eval': ERROR,
		'no-ex-assign': ERROR,
		'no-extend-native': ERROR,
		'no-extra-bind': ERROR,
		'no-extra-boolean-cast': ERROR,
		'no-extra-parens': [ERROR, 'functions'],
		'no-fallthrough': ERROR,
		'no-floating-decimal': ERROR,
		'no-func-assign': ERROR,
		'no-implied-eval': ERROR,
		'no-inner-declarations': [ERROR, 'functions'],
		'no-invalid-regexp': ERROR,
		'no-irregular-whitespace': ERROR,
		'no-iterator': ERROR,
		'no-label-var': ERROR,
		'no-labels': [ERROR, {
			'allowLoop': false,
			'allowSwitch': false,
		}],
		'no-lone-blocks': ERROR,
		'no-mixed-spaces-and-tabs': ERROR,
		'no-multi-spaces': ERROR,
		'no-multi-str': ERROR,
		'no-multiple-empty-lines': [ERROR, {
			'max': 1,
		}],
		'no-native-reassign': ERROR,
		'no-negated-in-lhs': ERROR,
		'no-new-object': ERROR,
		'no-new-require': ERROR,
		'no-new-symbol': ERROR,
		'no-new-wrappers': ERROR,
		'no-obj-calls': ERROR,
		'no-octal': ERROR,
		'no-octal-escape': ERROR,
		'no-path-concat': ERROR,
		'no-proto': ERROR,
		'no-redeclare': ERROR,
		'no-regex-spaces': ERROR,
		'no-return-assign': [ERROR, 'except-parens'],
		'no-self-assign': ERROR,
		'no-self-compare': ERROR,
		'no-sequences': ERROR,
		'no-shadow-restricted-names': ERROR,
		'no-spaced-func': ERROR,
		'no-sparse-arrays': ERROR,
		'no-this-before-super': ERROR,
		'no-throw-literal': ERROR,
		'no-trailing-spaces': ERROR,
		'no-undef': ERROR,
		'no-undef-init': ERROR,
		'no-unexpected-multiline': ERROR,
		'no-unmodified-loop-condition': ERROR,
		'no-unneeded-ternary': [ERROR, {
			'defaultAssignment': false,
		}],
		'no-unreachable': ERROR,
		'no-unsafe-finally': ERROR,
		'no-unused-vars': [ERROR, {
			'vars': 'all',
			'args': 'none',
		}],
		'no-useless-call': ERROR,
		'no-useless-computed-key': ERROR,
		'no-useless-constructor': ERROR,
		'no-useless-escape': OFF,
		'no-whitespace-before-property': ERROR,
		'no-with': ERROR,
		'one-var': [ERROR, {
			'initialized': 'never',
		}],
		'operator-linebreak': ['error', 'before'],
		'padded-blocks': [ERROR, 'never'],
		'quotes': [ERROR, 'single', {
			'avoidEscape': true,
			'allowTemplateLiterals': true,
		}],
		'semi': [ERROR, 'always'],
		'semi-spacing': [ERROR, {
			'before': false,
			'after': true,
		}],
		'space-before-blocks': [ERROR, 'always'],
		'space-before-function-paren': [ERROR, 'never'],
		'space-in-parens': [ERROR, 'never'],
		'space-infix-ops': ERROR,
		'space-unary-ops': [ERROR, {
			'words': true,
			'nonwords': false,
		}],
		'spaced-comment': [ERROR, 'always', {
			'markers': ['global', 'globals', 'eslint', 'eslint-disable', '*package', '!', ','],
		}],
		'template-curly-spacing': [ERROR, 'always'],
		'use-isnan': ERROR,
		'valid-typeof': ERROR,
		'wrap-iife': [ERROR, 'any'],
		'yield-star-spacing': [ERROR, 'both'],
		'yoda': [ERROR, 'never'],
		'prefer-const': ERROR,
		'no-debugger': process.env.NODE_ENV === 'production' ? ERROR : OFF,
		'object-curly-spacing': [ERROR, 'always', {
			objectsInObjects: false,
		}],
		'array-bracket-spacing': [ERROR, 'never'],
	},
};
